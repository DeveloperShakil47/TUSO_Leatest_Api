// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TUSO.Infrastructure.SqlServer;

#nullable disable

namespace TUSO.Infrastructure.SqlServer.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231221094334_Initial migration add new teamlead table")]
    partial class Initialmigrationaddnewteamleadtable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TUSO.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ISOCodeAlpha2")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.DeviceControl", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<decimal?>("CPUUses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MemoryUses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.ToTable("DeviceControls");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.DeviceType", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeviceTypeName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.ToTable("DeviceTypes");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.District", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Oid");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.EmailConfiguration", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<string>("Auditmails")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("Port")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("SMTPServer")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Oid");

                    b.ToTable("EmailConfigurations");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.EmailControl", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailSendForIncidentClose")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailSendForIncidentCreate")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.ToTable("EmailControls");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.EmailTemplate", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<int?>("BodyType")
                        .HasColumnType("int");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MailBody")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Oid");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Facility", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("FacilityMasterCode")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<byte>("FacilityType")
                        .HasColumnType("tinyint");

                    b.Property<string>("HMISCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte>("Location")
                        .HasColumnType("tinyint");

                    b.Property<string>("Longitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<byte>("Ownership")
                        .HasColumnType("tinyint");

                    b.HasKey("Oid");

                    b.HasIndex("DistrictId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.FacilityPermission", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.HasIndex("FacilityId");

                    b.HasIndex("UserId");

                    b.ToTable("FacilityPermissions");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.FundingAgency", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FundingAgencyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Oid");

                    b.HasIndex("ProjectId");

                    b.ToTable("FundingAgencies");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.ImplementingPartner", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ImplementingPartnerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Oid");

                    b.HasIndex("ProjectId");

                    b.ToTable("ImplementingPartners");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Incident", b =>
                {
                    b.Property<long>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oid"));

                    b.Property<long?>("AssignedTo")
                        .HasColumnType("bigint");

                    b.Property<long?>("AssignedToState")
                        .HasColumnType("bigint");

                    b.Property<string>("CallerCellphone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CallerCountryCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CallerEmail")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("CallerJobTitle")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("CallerName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateOfIncident")
                        .IsRequired()
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("DateReported")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateResolved")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstLevelCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReassigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReassignDate")
                        .HasColumnType("smalldatetime");

                    b.Property<long?>("ReassignedTo")
                        .HasColumnType("bigint");

                    b.Property<long>("ReportedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("ResolvedRequest")
                        .HasColumnType("bit");

                    b.Property<int?>("SecondLevelCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SystemId")
                        .HasColumnType("int");

                    b.Property<long?>("TeamId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ThirdLevelCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("TicketTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Oid");

                    b.HasIndex("FacilityId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("ReportedBy");

                    b.HasIndex("SystemId");

                    b.HasIndex("TeamId");

                    b.HasIndex("ThirdLevelCategoryId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentActionLog", b =>
                {
                    b.Property<long>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oid"));

                    b.Property<DateTime?>("AdminDateModified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("AdminId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("AgentDateModified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("AgentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CloseUserAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ExpertDateModified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExpertId")
                        .HasColumnType("bigint");

                    b.Property<long>("IncidentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SupervisedDateModified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("SupervisedId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TeamLeadDateModified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("TeamLeadId")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.HasIndex("AdminId");

                    b.HasIndex("AgentId");

                    b.HasIndex("CloseUserAccountId");

                    b.HasIndex("ExpertId");

                    b.HasIndex("IncidentId");

                    b.HasIndex("SupervisedId");

                    b.HasIndex("TeamLeadId");

                    b.ToTable("IncidentActionLogs");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentAdminActionLog", b =>
                {
                    b.Property<long>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oid"));

                    b.Property<string>("ChangeHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("IncidentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserAccountOid")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.HasIndex("IncidentId");

                    b.HasIndex("UserAccountOid");

                    b.ToTable("IncidentAdminActionLogs");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentCategory", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IncidentCategorys")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Oid");

                    b.ToTable("IncidentCategories");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentPriority", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Oid");

                    b.ToTable("IncidentPriorities");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Member", b =>
                {
                    b.Property<long>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("TeamId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Message", b =>
                {
                    b.Property<long>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("IncidentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Messages")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("OpenDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasMaxLength(91)
                        .HasColumnType("nvarchar(91)");

                    b.HasKey("Oid");

                    b.HasIndex("IncidentId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Module", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Oid");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.ModulePermission", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Oid");

                    b.HasIndex("ModuleId");

                    b.HasIndex("RoleId");

                    b.ToTable("ModulePermissions");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.ProfilePicture", b =>
                {
                    b.Property<long>("Oid")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("ProfilePictures")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Oid");

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Project", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Oid");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Province", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Oid");

                    b.HasIndex("CountryId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.RDPDeviceInfo", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MACAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("MotherBoardSerial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrivateIP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PublicIP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Oid");

                    b.ToTable("RDPDeviceInfoes");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.RdpServerInfo", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("ServerURL")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Oid");

                    b.ToTable("RdpServerInfos");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.RecoveryRequest", b =>
                {
                    b.Property<long>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oid"));

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequestOpen")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Oid");

                    b.HasIndex("UserAccountId");

                    b.ToTable("RecoveryRequests");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.RemoteLoginConcent", b =>
                {
                    b.Property<long>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oid"));

                    b.Property<DateTime?>("ConnectDate")
                        .HasColumnType("smalldatetime");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.HasIndex("UserAccountId");

                    b.ToTable("RemoteLoginConcents");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Oid");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Screenshot", b =>
                {
                    b.Property<long>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("IncidentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Screenshots")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Oid");

                    b.HasIndex("IncidentId");

                    b.ToTable("Screenshots");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.SystemPermission", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("SystemId")
                        .HasColumnType("int");

                    b.Property<long>("UserAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.HasIndex("SystemId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("SystemPermissions");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Team", b =>
                {
                    b.Property<long>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Oid");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.TeamLead", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("TeamId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("Oid");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("TeamLeads");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.UserAccount", b =>
                {
                    b.Property<long>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Oid"));

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<bool>("IsAccountActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(61)
                        .HasColumnType("nvarchar(61)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Oid");

                    b.HasIndex("DeviceTypeId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.District", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Province", "Provinces")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Facility", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.District", "Districts")
                        .WithMany("Facilities")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.FacilityPermission", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Facility", "Facility")
                        .WithMany("FacilityPermissions")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccount")
                        .WithMany("FacilityPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.FundingAgency", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Project", "Projects")
                        .WithMany("FundingAgencies")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.ImplementingPartner", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Project", "Projects")
                        .WithMany("ImplementingPartners")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Incident", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Facility", "Facilities")
                        .WithMany("Incidents")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.IncidentPriority", "IncidentPriority")
                        .WithMany("Incidents")
                        .HasForeignKey("PriorityId");

                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccounts")
                        .WithMany("Incidents")
                        .HasForeignKey("ReportedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.Project", "Projects")
                        .WithMany("Incidents")
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.Team", "Teams")
                        .WithMany("Incidents")
                        .HasForeignKey("TeamId");

                    b.HasOne("TUSO.Domain.Entities.IncidentCategory", "IncidentCategory")
                        .WithMany("Incidents")
                        .HasForeignKey("ThirdLevelCategoryId");

                    b.Navigation("Facilities");

                    b.Navigation("IncidentCategory");

                    b.Navigation("IncidentPriority");

                    b.Navigation("Projects");

                    b.Navigation("Teams");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentActionLog", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccountAdmins")
                        .WithMany("UserAccountAdminsList")
                        .HasForeignKey("AdminId");

                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccountAgents")
                        .WithMany("UserAccountAgentsList")
                        .HasForeignKey("AgentId");

                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccountsClosed")
                        .WithMany("UserAccountsClosedList")
                        .HasForeignKey("CloseUserAccountId");

                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccountExperts")
                        .WithMany("UserAccountExpertsList")
                        .HasForeignKey("ExpertId");

                    b.HasOne("TUSO.Domain.Entities.Incident", "Incident")
                        .WithMany("IncidentActionLogs")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccountsSuperviseds")
                        .WithMany("UserAccountSupervisedsList")
                        .HasForeignKey("SupervisedId");

                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccountsTeamLeads")
                        .WithMany("UserAccountsTeamLeadsList")
                        .HasForeignKey("TeamLeadId");

                    b.Navigation("Incident");

                    b.Navigation("UserAccountAdmins");

                    b.Navigation("UserAccountAgents");

                    b.Navigation("UserAccountExperts");

                    b.Navigation("UserAccountsClosed");

                    b.Navigation("UserAccountsSuperviseds");

                    b.Navigation("UserAccountsTeamLeads");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentAdminActionLog", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Incident", "Incident")
                        .WithMany("IncidentAdminActionLogs")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.UserAccount", null)
                        .WithMany("IncidentAdminActionLogs")
                        .HasForeignKey("UserAccountOid");

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Member", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Team", "Teams")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccounts")
                        .WithMany("Members")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teams");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Message", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Incident", "Incident")
                        .WithMany("Messages")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.ModulePermission", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Module", "Modules")
                        .WithMany("ModulePermissions")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.Role", "Roles")
                        .WithMany("ModulePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modules");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.ProfilePicture", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccounts")
                        .WithMany()
                        .HasForeignKey("Oid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Province", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Country", "Countries")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.RecoveryRequest", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccounts")
                        .WithMany()
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.RemoteLoginConcent", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccounts")
                        .WithMany("RemoteLoginConcents")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Screenshot", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Incident", "Incidents")
                        .WithMany("Screenshots")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.SystemPermission", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Project", "Projects")
                        .WithMany("SystemPermissions")
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccount")
                        .WithMany("SystemPermissions")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projects");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.TeamLead", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Team", "Teams")
                        .WithMany("TeamLeads")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccounts")
                        .WithMany()
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teams");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.UserAccount", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.DeviceType", "DeviceTypes")
                        .WithMany("UserAccounts")
                        .HasForeignKey("DeviceTypeId");

                    b.HasOne("TUSO.Domain.Entities.Role", "Roles")
                        .WithMany("UserAccounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceTypes");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Country", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.DeviceType", b =>
                {
                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.District", b =>
                {
                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Facility", b =>
                {
                    b.Navigation("FacilityPermissions");

                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Incident", b =>
                {
                    b.Navigation("IncidentActionLogs");

                    b.Navigation("IncidentAdminActionLogs");

                    b.Navigation("Messages");

                    b.Navigation("Screenshots");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentCategory", b =>
                {
                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentPriority", b =>
                {
                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Module", b =>
                {
                    b.Navigation("ModulePermissions");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Project", b =>
                {
                    b.Navigation("FundingAgencies");

                    b.Navigation("ImplementingPartners");

                    b.Navigation("Incidents");

                    b.Navigation("SystemPermissions");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Role", b =>
                {
                    b.Navigation("ModulePermissions");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Team", b =>
                {
                    b.Navigation("Incidents");

                    b.Navigation("Members");

                    b.Navigation("TeamLeads");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.UserAccount", b =>
                {
                    b.Navigation("FacilityPermissions");

                    b.Navigation("IncidentAdminActionLogs");

                    b.Navigation("Incidents");

                    b.Navigation("Members");

                    b.Navigation("RemoteLoginConcents");

                    b.Navigation("SystemPermissions");

                    b.Navigation("UserAccountAdminsList");

                    b.Navigation("UserAccountAgentsList");

                    b.Navigation("UserAccountExpertsList");

                    b.Navigation("UserAccountSupervisedsList");

                    b.Navigation("UserAccountsClosedList");

                    b.Navigation("UserAccountsTeamLeadsList");
                });
#pragma warning restore 612, 618
        }
    }
}
